#include <bits/stdc++.h> 

int merge(vector<int>&arr,int l , int mid , int h){
    
    int count = 0 ; 
    int j = mid+1;
    for(int i = l ; i<= mid ; i++){
        while(j<= h && ( arr[i]>( 2LL*arr[j]) ) ){
           // if(l==0 && h==5){cout<<j<<arr[i]<<arr[j]<<endl;}
            j++;
        }
        count += (j-(mid+1));
        
        //if(l==0 && h==5)cout<<count<<"a "<<" "<<i<<" "<<j<<endl;
    }
    vector<int>t;
    int left = l , right = mid+1;
    while(left<=mid && right<=h){
        if(arr[left]<=arr[right])t.push_back(arr[left++]);
        else t.push_back(arr[right++]);
    }
    while(left<=mid)t.push_back(arr[left++]);
    while(right<=h)t.push_back(arr[right++]);
    for(int i= l ; i<=h ; i++){
        arr[i] = t[i-l];
    }
    
    return count;
}

int mergesort(vector<int> &arr, int l , int h ){
    if(l>=h)return 0;
    int mid = l + (h - l)/2;
        int s1 = mergesort(arr,l,mid);
        s1 += mergesort(arr,mid+1, h);
        s1 += merge(arr,l,mid,h);
        return s1;
}

int reversePairs(vector<int> &arr, int n){
	// Write your code here.	
    return mergesort(arr,0,n-1);
}
