/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class TreeNode{
    public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
        ~TreeNode() {
            if (left){
                delete left;
            }
            if (right){
                delete right;
            }
        }
    };

*************************************************************/
#include <algorithm>
TreeNode<int>* build(vector<int>& inorder,int s , int e){
    if(s>e)return NULL;
    int mid = (s+e)/2;
    TreeNode<int>* root = new TreeNode<int> (inorder[mid]);
    root->left = build(inorder,s,mid-1);
    root->right = build(inorder,mid+1,e);
    return root;
}


TreeNode<int>* preOrderTree(vector<int> &preorder){
    // Write your code here.
    sort(preorder.begin(),preorder.end());
    return build(preorder,0,preorder.size()-1);
    
}
