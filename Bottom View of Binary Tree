/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
#include<bits/stdc++.h>
vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
    vector<int>ans;
    if(root==NULL)return ans;
    queue<pair<BinaryTreeNode<int>*,int>>q;
    map<int,int>m;
    q.push({root,0});
    while(!q.empty()){
        auto itr = q.front();
        q.pop();
        
        
        BinaryTreeNode<int>* node = itr.first;
        int val = itr.second;
        m[val]=node->data;
        
        if(node->left!=NULL)q.push({node->left,val-1});
        if(node->right!=NULL)q.push({node->right,val+1});
    }
    for(auto itr : m){
        ans.push_back(itr.second);
    }
    return ans;
 
}
