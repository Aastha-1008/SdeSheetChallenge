#include<unordered_map>
#include<stack>
#include<set>
void find(int node , vector<int>&vis,stack<int>&s , unordered_map<int,set<int>>& adj){
    vis[node]=1;
    for(auto i : adj[node]){
        if(!vis[i]){
            find(i,vis,s,adj);
        }
    }
    s.push(node);
}

vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // Write your code here
    unordered_map<int,set<int>>adj;
    for(int i = 0 ; i<e ;i++){
        int u = edges[i][0];
        int v = edges[i][1];
        adj[u].insert(v);
    }
    vector<int>vis(v+1,0);
    stack<int>s;
    for(int i = 0 ; i<v ; i++){
        if(vis[i]==0){
            find(i,vis,s,adj);
        }
    }
    vector<int>ans;
    while(!s.empty()){
        ans.push_back(s.top());
        s.pop();
    }
    return ans;
}
