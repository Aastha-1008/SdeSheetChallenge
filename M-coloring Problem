bool poss(int node , vector<int>&color , vector<vector<int>>&mat,int n , int m){
    for(int k = 0 ; k<n ; k++){
        if(k!=node && mat[node][k] == 1 && color[k] == m)return false;
    }
    return true;
}

bool solve(int node , vector<int>&color , vector<vector<int>>&mat , int n,int m){
    if(node == n)return true;
    for(int i = 0 ; i<m ; i++){
        if(poss(node,color,mat,n,i)){
            color[node] = i;
            if(solve(node+1,color,mat,n,m))return true;
            color[node] = 0;
        }
    }
    return false;
}

string graphColoring(vector<vector<int>> &mat, int m) {
    // Write your code here
    vector<int>color(m,0);
    if(solve(0,color,mat,mat.size() , m))return "YES";
    else return "NO";
}
