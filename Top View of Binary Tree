/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
#include<bits/stdc++.h>
vector<int> getTopView(TreeNode<int> *root) {
    // Write your code here.
        vector<int>ans;
    if(root==NULL)return ans;
    map<int,int>m;
    queue<pair<TreeNode<int>*,int>>q;
    q.push({root,0});
    while(!q.empty()){
        auto itr = q.front();
        q.pop();
        TreeNode<int>* node = itr.first;
        int value = itr.second;
        if(m.find(value)==m.end()){
            m[value] = node->val;
        }
        if(node->left)q.push({node->left,value-1});
        if(node->right)q.push({node->right,value+1});
        
    }
    for(auto i:m){
        ans.push_back(i.second);
    }
    return ans;
}
