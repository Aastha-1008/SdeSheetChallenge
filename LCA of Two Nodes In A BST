/************************************************************
    Following is the Binary Search Tree node structure
    
    template <typename T>
    class TreeNode {
        public :
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~TreeNode() {
            if(left)
                delete left;
            if(right)
                delete right;
        }
    };

************************************************************/
TreeNode<int>* find(TreeNode<int>* root, TreeNode<int>* P, TreeNode<int>* Q){
    if(root==NULL)return root;
    if(root->data == P->data || root->data == Q->data ) return root;
    if(root->data > P->data && root->data< Q->data)return root;
    if(root->data < P->data && root->data > Q->data)return root;
    if(root->data >  P->data && root->data >Q->data)return find(root->left , P,Q);
    else return find(root->right,P,Q);
}
TreeNode<int>* LCAinaBST(TreeNode<int>* root, TreeNode<int>* P, TreeNode<int>* Q)
{
	// Write your code here
    if(root==NULL)return root;
    return find(root,P,Q);
}
