#include<bits/stdc++.h>
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{
    // Write your code here.
    vector<pair<int,int>>adj[n+1];
    for(int i = 0 ; i<g.size() ; i++){
        adj[g[i].first.first].push_back({g[i].first.second,g[i].second});
        adj[g[i].first.second].push_back({g[i].first.first,g[i].second});
    }
    vector<int>parent(n+1,-1);
    vector<int>key(n+1,INT_MAX);
    vector<int>mst(n+1,false);
    priority_queue< pair<int,int> , vector<pair<int,int>>, greater<pair<int,int>> > pq;
    pq.push({0,1});
    key[1]=0;
    while(!pq.empty()){
        int node = pq.top().second;
        int dis = pq.top().first;
        mst[node]= true;
        pq.pop();
        for(auto it : adj[node]){
            int n = it.first;
            int d = it.second;
            if(!mst[n] && key[n]>d){
                key[n]=d;
                parent[n]=node;
                pq.push({d,n});
            }
        }
    }
    vector<pair<pair<int,int>,int>>ans;
    for(int i = 2 ; i<=n ; i++){
        ans.push_back({{parent[i],i},key[i]});
    }
    return ans;
}
