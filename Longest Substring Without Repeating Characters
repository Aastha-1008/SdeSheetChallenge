/* -------------------------------------  C  P  P               S O L U T I O N  -----------------------------------------------*/
#include <bits/stdc++.h> 
int uniqueSubstrings(string input)
{
    //Write your code here
    
    map<char,int>m;
    int l = 0 , r = 0 , len = 0 ;
    int n = input.length();
    while(r<n){
        if(m.find(input[r])!= m.end()){
            auto it = m.find(input[r]);
            l = max(l,it->second + 1);
        }
        m[input[r]] = r;
        len = max(len , r-l+1);
        r++;
        
    }
    return len;
}

/* ----------------------------- J  A  V  A     S  O  L  U  T  I  O  N   --------------------------------------------------------*/
import java.util.* ;
import java.io.*; 
public class Solution 
{
	public static int uniqueSubstrings(String input) 
    {
		//write your code here
        HashMap<Character,Integer>m  =  new HashMap<Character,Integer>();
        
        int  l=0,r=0;
        int   len   =  0;
        int n    = input.length();
        while(r<n){
            
            if(m.containsKey(input.charAt(r))){
                l = Math.max(l,m.get(input.charAt(r))+1);
            }
            m.put(input.charAt(r),r);
            len = Math.max(len,r-l+1);
            r++;
            
        }
        return len;
        
	}
}
