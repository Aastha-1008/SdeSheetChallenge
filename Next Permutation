/*----------------------------------------------------  J  A  V  A      S  O  L  U  T  I  O  N     -------------------------------------------------*/
import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{
    public static void reversse(ArrayList<Integer> permutation , int i,int j){
        while(i<j){
            Collections.swap(permutation, i++,j--);
        }
    }
    
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> permutation) 
	{
		// Write your code here.
        int n = permutation.size();
        if(permutation == null || n<=1)return permutation;
        int ind1 = -1 , ind2 = -1;
        for(int  i = n-2; i>=0 ; i--){
            if(permutation.get(i)<permutation.get(i+1)){
                ind1 = i;
                break;
            }
        }
        if(ind1>=0){
        int val1 = permutation.get(ind1);
            for(int i = n-1 ; i>=0 ; i--){
                int val2 = permutation.get(i);
                if(val2>val1 && i>ind1){ind2 = i;break;}
            }
            Collections.swap(permutation,ind1,ind2);
        }
        reversse(permutation,ind1+1,n-1);
        return permutation;
	}
}



/* -------------------------------------------------  C P  P         S  O  L  U  T  I  O  N   --------------------------------------------------------*/

#include <bits/stdc++.h> 
void reversse(vector<int> &arr, int i , int j ){
    while(i<j){
        swap(arr[i++],arr[j--]);
    }
}
vector<int> nextPermutation(vector<int> &permutation, int n)
{
    //  Write your code here.
    int ind1 = -1 , ind2 = -1 ;
    for(int i = n-2 ; i>=0 ; i--){
        if(permutation[i] < permutation[i+1]){
            ind1 = i;
            break;
        }
    }
    if(ind1>=0){
        for(int i = n-1 ; i>=0 ; i--){
            if(permutation[i]>permutation[ind1]){ind2 = i;break;}
        }
    }
    swap(permutation[ind1],permutation[ind2]);
    reversse(permutation,ind1+1,n-1);
    return permutation;
}
