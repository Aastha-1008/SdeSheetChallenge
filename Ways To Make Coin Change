#include<bits/stdc++.h>
long find(int* deno , int pos , int n , int val , vector<vector<long>>&dp){
    if(pos==n)return 0;
    if(val == 0)return 1;
    if(dp[pos][val]!=-1)return dp[pos][val];
    long inc=0;
    if(val-deno[pos]>=0){
         inc = find(deno,pos,n,val-deno[pos],dp);
    }
    long exc = find(deno,pos+1,n,val,dp);
    return dp[pos][val] = inc + exc;
}

long countWaysToMakeChange(int *denominations, int n, int value)
{
    //Write your code here
    vector<vector<long>>dp(n,vector<long>(value+1,-1));
    return find(denominations,0,n,value,dp);
    
}
